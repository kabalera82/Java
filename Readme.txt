# üìò Proyecto Java - Ejercicios por Temas

Este repositorio contiene una colecci√≥n estructurada de ejercicios de programaci√≥n en Java, organizados por **temas secuenciales** que siguen un itinerario formativo desde conceptos b√°sicos hasta programaci√≥n concurrente y redes.

Cada carpeta representa un **tema espec√≠fico** y contiene ejercicios pr√°cticos, ejemplos y, en algunos casos, proyectos completos aplicando los conceptos aprendidos.

---

## üìÇ Estructura del Proyecto

| Carpeta | Descripci√≥n |
|--------|-------------|
| `Tema01ConceptosBasicos` | Fundamentos del lenguaje Java: tipos primitivos, operadores, entrada/salida. |
| `Tema02Condicionales` | Estructuras condicionales (`if`, `switch`, ternarios). |
| `Tema03Bucles` | Bucles `for`, `while`, `do-while` y estructuras de control repetitivas. |
| `Tema04_01Metodos` | Declaraci√≥n, uso y composici√≥n de m√©todos. |
| `Tema04_02VarArgs` | Uso de argumentos variables y primeras aplicaciones con colecciones y Streams. |
| `Tema04_03Polimorfismo/Ejercicio01` | Introducci√≥n al polimorfismo con ejercicios aplicados. |
| `Tema05_01Tablas` | Uso de arrays unidimensionales. |
| `Tema05_02MatricesArrays` | Manipulaci√≥n de arrays bidimensionales (matrices). |
| `Tema06CadenasDeCaracteres` | Manejo de cadenas (`String`, `StringBuilder`, expresiones regulares). |
| `Tema07Clases` | Declaraci√≥n de clases, atributos, constructores y m√©todos. |
| `Tema08_01Herencia` | Fundamentos de herencia entre clases. |
| `Tema08_02InstanceOf` | Uso de `instanceof` para comprobaci√≥n de tipos. |
| `Tema09Interfaces` | Definici√≥n e implementaci√≥n de interfaces. |
| `Tema10_01FicherosDeTexto` | Lectura y escritura de ficheros de texto. |
| `Tema10_02FicherosBinarios` | Lectura y escritura de ficheros binarios con `ObjectInputStream`. |
| `Tema11Colecciones` | Uso de colecciones gen√©ricas: `List`, `Set`, `Map`, pilas, colas, etc. |
| `Tema12Streams` | Programaci√≥n funcional con Streams y colecciones. |
| `Tema16Threads` | Programaci√≥n concurrente con hilos (`Thread`, `Runnable`, `ExecutorService`). |
| `Tema17ProgramacionFuncional` | Lambda expressions, funciones puras, y combinadores funcionales. |
| `Tema18ProgramacionRed` | Programaci√≥n de red con sockets (cliente-servidor). |

---

## ‚úÖ Objetivos del proyecto

- Consolidar el aprendizaje progresivo de Java.
- Aplicar programaci√≥n orientada a objetos, estructuras de datos, E/S y concurrencia.
- Practicar la escritura de c√≥digo limpio y modular.
- Desarrollar habilidades en resoluci√≥n de problemas y dise√±o de soluciones.

---

## üõ†Ô∏è Requisitos

- Java JDK 17+ (recomendado)
- IDE como IntelliJ IDEA, Eclipse o VSCode
- Git para control de versiones

---

## üöÄ C√≥mo ejecutar

1. Clona el repositorio:
   ```bash
   git clone https://github.com/usuario/nombre-del-repo.git
   cd nombre-del-repo
