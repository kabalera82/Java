# üìò Proyecto Java ‚Äì Ejercicios por Temas

Este repositorio contiene una colecci√≥n estructurada de **ejercicios de programaci√≥n en Java**, organizados por **temas secuenciales**. Ideal para estudiantes, autodidactas o docentes que deseen recorrer paso a paso los conceptos clave del lenguaje Java, desde los fundamentos hasta la programaci√≥n concurrente y de red.

---

## üóÇÔ∏è Estructura del Proyecto

> Cada carpeta representa un **tema espec√≠fico** con ejercicios pr√°cticos, ejemplos comentados y a veces proyectos completos.

### üß© Fundamentos de Java
| Carpeta | Contenido |
|--------|----------|
| `Tema01ConceptosBasicos` | Tipos primitivos, operadores, entrada/salida b√°sica. |
| `Tema02Condicionales` | Estructuras condicionales: `if`, `switch`, operadores ternarios. |
| `Tema03Bucles` | Bucles `for`, `while`, `do-while` y estructuras repetitivas. |
| `Tema04_01Metodos` | Declaraci√≥n, uso y composici√≥n de m√©todos. |
| `Tema04_02VarArgs` | Argumentos variables, colecciones b√°sicas y primeros Streams. |
| `Tema04_03Polimorfismo/Ejercicio01` | Introducci√≥n al polimorfismo con ejemplos aplicados. |

---

### üìä Estructuras de Datos
| Carpeta | Contenido |
|--------|----------|
| `Tema05_01Tablas` | Arrays unidimensionales. |
| `Tema05_02MatricesArrays` | Arrays bidimensionales (matrices). |
| `Tema06CadenasDeCaracteres` | Manejo de `String`, `StringBuilder`, expresiones regulares. |
| `Tema07Clases` | Creaci√≥n de clases, atributos, constructores y m√©todos. |
| `Tema08_01Herencia` | Fundamentos de la herencia en Java. |
| `Tema08_02InstanceOf` | Uso de `instanceof` para comprobaci√≥n de tipos. |
| `Tema09Interfaces` | Definici√≥n e implementaci√≥n de interfaces. |

---

### üóÉÔ∏è Entrada/Salida y Colecciones
| Carpeta | Contenido |
|--------|----------|
| `Tema10_01FicherosDeTexto` | Lectura/escritura de archivos de texto. |
| `Tema10_02FicherosBinarios` | Manejo de ficheros binarios con `ObjectInputStream`. |
| `Tema11Colecciones` | Uso de `List`, `Set`, `Map`, pilas, colas, etc. |
| `Tema12Excepciones` | Jerarqu√≠a de excepciones y manejo con `try-catch-finally`. |

---

### üöÄ Avanzado
| Carpeta | Contenido |
|--------|----------|
| `Tema13Streams` | Programaci√≥n funcional con Streams. |
| `Tema14Threads` | Programaci√≥n concurrente: `Thread`, `Runnable`, `ExecutorService`. |
| `TemaJPA` | Introducci√≥n al uso de JPA (Java Persistence API). |
| `Tema16WebURLAPI` | Consumo de APIs REST, manejo de URLs y clientes HTTP. |
| `Tema17ProgramacionFuncional` | Lambdas, funciones puras y composici√≥n funcional. |
| `Tema18ProgramacionRed` | Comunicaci√≥n cliente-servidor mediante sockets. |

---

## ‚úÖ Objetivos del Proyecto

- Consolidar el aprendizaje progresivo del lenguaje Java.
- Aplicar programaci√≥n orientada a objetos, estructuras de datos, E/S y concurrencia.
- Practicar escritura de c√≥digo limpio, modular y mantenible.
- Fomentar la resoluci√≥n de problemas y el dise√±o de soluciones eficientes.

---

## üõ†Ô∏è Requisitos

- ‚òï Java JDK 17+ (recomendado)
- üß† IDE recomendado: IntelliJ IDEA, Eclipse o VSCode
- üóÉÔ∏è Git para control de versiones

---

## üöÄ C√≥mo Ejecutar

1. Clona este repositorio:

```bash
git clone https://github.com/usuario/nombre-del-repo.git
cd nombre-del-repo
